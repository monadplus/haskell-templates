{-# START_FILE .gitignore #-}
dist/
dist-newstyle/
cabal.project.local
.stack-work/
result
*~

{-# START_FILE hie.yaml #-}
# cradle:
#     stack:
#         - path: "./src"
#           component: "{{name}}:lib"
#         - path: "./app"
#           component: "{{name}}:exe:{{name}}"
#         - path: "./test"
#           component: "{{name}}:test:{{name}}-tests"
cradle:
    cabal:
        - path: "./src"
          component: "lib:{{name}}"
        - path: "./app"
          component: "exe:{{name}}"
        - path: "./test"
          component: "test:{{name}}-tests"

{-# START_FILE LICENSE #-}
MIT License

Copyright (c) 2020 Arnau Abella

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

{-# START_FILE cabal.project.local #-}
tests: True
optimization: 2
documentation: False
profiling: False

{-# START_FILE {{name}}.cabal #-}
cabal-version:       2.4

name:                {{name}}
version:             0.1.0.0
build-type:          Simple
license:             MIT
license-file:        LICENSE
author:              Arnau Abella
maintainer:          arnauabella@gmail.com
copyright:           2020 Arnau Abella
homepage:            https://github.com/monadplus/{{name}}
bug-reports:         https://github.com/monadplus/{{name}}/issues
synopsis:            {{synopsis}}
description:         {{description}}
category:            {{category}}
extra-source-files:  README.md
                     CHANGELOG.md
tested-with:         GHC == 8.8.4

source-repository head
  type:                git
  location:            https://github.com/monadplus/{{name}}.git

common common-options
    build-depends:    base ^>=4.13.0.0
    default-language: Haskell2010
    other-extensions: OverloadedStrings
                      BangPatterns
    ghc-options:      -Wall
                      -Werror
                      -Wincomplete-uni-patterns
                      -Wincomplete-record-updates
                      -Wcompat
                      -Widentities
                      -Wredundant-constraints
                      -Wpartial-fields
                      -fhide-source-paths
                      -freverse-errors
  if impl(ghc >= 8.8.1)
    ghc-options:      -Wmissing-deriving-strategies
                      -Werror=missing-deriving-strategies

Executable {{name}}
  import:                common-options
  main-is:               Main.hs
  hs-source-dirs:        app
  ghc-options:           -O2 -threaded -rtsopts -with-rtsopts=-N
  -- build-depends:

Library
  import:             common-options
  hs-source-dirs:     src
  exposed-modules:    Lib
  other-modules:
  build-depends:      bytestring         ^>=0.10,
                      containers         ^>=0.6,
                      data-default       ^>=0.7,
                      deepseq            ^>=1.4,
                      text               ^>=1.2,

Test-suite {{name}}-tests
  import:               common-options
  type:                 exitcode-stdio-1.0
  hs-source-dirs:       test
  main-is:              Spec.hs
  other-modules:
  build-depends:        bytestring  ^>=0.10,
                        hspec       ^>=2.7.0,
                        QuickCheck  ^>=2.14,
                        text        ^>=1.2,

Benchmark {{name}}-bench
  import:         common-options
  type:           exitcode-stdio-1.0
  hs-source-dirs: benchmark
  main-is:        Benchmark.hs
  ghc-options:    -O2 -threaded -rtsopts -with-rtsopts=-N
  build-depends:  {{name}},
                  gauge  ^>=0.2,

{-# START_FILE README.md #-}
### {{name}}

{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain

{-# START_FILE app/Main.hs #-}
module Main where

main :: IO ()
main = putStrLn "Hello, Haskell!"

{-# START_FILE src/Lib.hs #-}
module Lib where

todo :: IO ()
todo = putStrLn "TODO"

{-# START_FILE test/Spec.hs #-}
module Main (main) where

import           System.IO  (hSetEncoding, stderr, stdout, utf8)
import           Test.Hspec (Spec, hspec)

main :: IO ()
main = do
    hSetEncoding stdout utf8
    hSetEncoding stderr utf8

    hspec allUnitTests

allUnitTests :: Spec
allUnitTests = undefined

{-# START_FILE CHANGELOG.md #-}
# Changelog

`{{name}}` uses [PVP Versioning][1].
The changelog is available [on GitHub][2].

## 0.1.0.0 â€” Unreleased

* Work in progress.

[1]: https://pvp.haskell.org
[2]: https://github.com/monadplus/{{name}}/releases

{-# START_FILE .hlint.yaml #-}
- ignore: {name: "Use camelCase"}

- arguments:
  - -XTypeApplications

- warn: {name: "Use explicit module export list"}

{-# START_FILE stack.yaml #-}
resolver: lts-16.25 # ghc8.8.4
extra-deps: []

{-# START_FILE benchmark/Benchmark.hs #-}
import           Gauge.Main

main :: IO ()
main = defaultMain []

{-# START_FILE .travis.yml #-}
sudo: true
language: haskell

git:
  depth: 5

cabal: "3.0"

cache:
  directories:
  - "$HOME/.cabal/store"
  - "$HOME/.stack"
  - "$TRAVIS_BUILD_DIR/.stack-work"

matrix:
  include:

  # Cabal
  - ghc: 8.6.5
  - ghc: 8.8.4
  - ghc: 8.10.1

  # stack
  - ghc: 8.8.4
  - ghc: 8.10.1
    env: STACK_YAML="$TRAVIS_BUILD_DIR/stack.yaml"

install:
  - |
    if [ -z "$STACK_YAML" ]; then
      cabal build --enable-tests --enable-benchmarks --write-ghc-environment-files=always
    else
      # install stack
      curl -sSL https://get.haskellstack.org/ | sh

      # build project with stack
      stack --version
      stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks
    fi

script:
  - |
    if [ -z "$STACK_YAML" ]; then
      cabal haddock
      cabal test all --enable-tests
    else
      stack test --system-ghc
    fi

notifications:
  email: false

{-# START_FILE .github/CODEOWNERS #-}
*  @monadplus

{-# START_FILE .github/workflows/ci.yml #-}
name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cabal: ["3.2"]
        ghc:
          - "8.6.5"
          - "8.8.4"
          - "8.10.1"
        exclude:
          - os: macOS-latest
            ghc: 8.8.4
          - os: macOS-latest
            ghc: 8.6.5
          - os: windows-latest
            ghc: 8.8.3
          - os: windows-latest
            ghc: 8.6.5

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/setup-haskell@v1.1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v1
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Build
      run: |
        cabal update
        cabal build all --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - name: Test
      run: |
        cabal test all --enable-tests

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["2.1.3"]
        ghc: ["8.8.4"]

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/setup-haskell@v1.1
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack test --system-ghc
